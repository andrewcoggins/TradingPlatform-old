\section{Online Learner}
One novel algorithm for meeting our belief aggregation constraint is to ensure that after every agent has participated in the market that the market price reflects the aggregate belief of all the agents that have already participated.

\subsection{Background}
Since $\LMSRb$ controls how quickly agents can move the market price, a miniscule $\LMSRb$ value permits an agent to set the market price to their belief at almost no cost while a large value of $\LMSRb$ makes moving the market price to their belief almost infinitely expensive. Agents with unit budgets, per our model, can move the market price to their belief without exhausting their budgets when $\LMSRb \leq 1$. Similarly, agents with unit budgets cannot move the price more than a rounding error when $\LMSRb \ge 100$. Since the LMSR cost function is both continuous and differentiable on that interval, the Mean Value Theorem implies that $\LMSRb$ can be set to recover any value on the interval $[\OptionPrice_t, \Agent_\AgentBelief]$. Agents will always exhaust their budget moving the market price as close as possible to their belief.\\

When operating on the $\mathbb{R}$, the definition of an arithmetic mean of arbitrary values $a$ and $b$ constrains the result to the interval $[a,b]$. We can utilize this fact to ensure that the market price is always equal to the arithmetic mean of the agent beliefs that the market maker has seen so far. Formally, $\OptionPrice_t = \frac{\sum_{i=1}^{t} \Agent^{i}_\AgentBelief}{t}$, $\forall t \in [1,|\Agents|]$.\\

\subsection{Algorithm}
The Online Learner operates by selecting a miniscule $\LMSRb$ for the first agent that arrives. After the first agent has participated, the price will be equal to first agent's belief. For all periods afterwards, the algorithm will recieve the new agent's belief, update its aggregate belief by computing the new average accounting for that agent, and solve for $\LMSRb$ such that the new agent will exhaust its budget by moving the market price to the new aggregate belief. A trivial way to solve for $\LMSRb$ is by conducting a binary search on the interval $(0, 100]$. If multiple $\LMSRb$ values solve the system then the Online Learner selects the smallest in order to minimize cost.